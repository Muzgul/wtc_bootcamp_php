
<- Color ----------------------------------------------------------------------

The Color class is deisnged to hangle RGB (Red Green Blue) colors.

__constuct( Array() )
The class will be instantiated by an array of values. This can occur in 2 ways:
    - An Array() with one value representing the whole RGB color as an int;
        Array( 'rgb' => (int) )
    - An Array() with each of the RGB values as a unique element;
        Array( 'red' => (int), 'green' => (int), 'blue' => (int) )
    ( Setting the Color::$verbose to TRUE will prompt a print of this construction. )

__destruct( void )
The class will be destructed as pre standard.
    ( Setting the Color::$verbose to TRUE will prompt a print of this deconstruction. )

__toString( void )
An object of this class will be printed in the following format:
    "Color ( red:   0, green:   0, blue:    0)"

Color::doc( void )
The documentation for this class will be returned in string format.

Color:add ( Color $input )
Computes the addition of the calling object's values with the input object's values to create a
new instance.
    - Addition of individual elements (RGB);
    - Each element will remain in the range [0 - 255];

Color:sub ( Color $input )
Computes the subtraction of the calling object's values with the input object's values to create a
new instance.
    - Subtraction of individual elements (RGB);
    - Each element will remain in the range [0 - 255];

Color::mult( (int)$factor )
Computes the multiplication of the calling object's values with the input object's values to create a
new instance.
    - Multiplication of individual elements (RGB);
    - Each element will remain in the range [0 - 255];

---------------------------------------------------------------------- Color ->
